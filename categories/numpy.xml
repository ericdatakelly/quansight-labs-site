<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Quansight Labs (Posts about NumPy)</title><link>https://labs.quansight.org/</link><description></description><atom:link href="https://labs.quansight.org/categories/numpy.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:info@quansight.com"&gt;Quansight Labs Team&lt;/a&gt; </copyright><lastBuildDate>Thu, 08 Jul 2021 10:46:02 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>A second CZI grant for NumPy and OpenBLAS</title><link>https://labs.quansight.org/blog/2020/11/a-second-czi-grant-for-numpy-and-openblas/</link><dc:creator>Melissa Weber Mendonça</dc:creator><description>&lt;div&gt;&lt;p&gt;I am happy to announce that NumPy and OpenBLAS have once again been awarded a
grant from the Chan Zuckerberg Initiative through
&lt;a href="https://chanzuckerberg.com/newsroom/czi-awards-4-7-million-for-open-source-software-and-organizations-advancing-open-science/"&gt;Cycle 3 of the Essential Open Source Software for Science (EOSS) program&lt;/a&gt;.
This new grant totaling $140,000 will fund part of our efforts to improve
usability and sustainability in both projects and is excellent news for the
scientific computing community, which will certainly benefit from this work
downstream.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/11/a-second-czi-grant-for-numpy-and-openblas/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>CZI</category><category>funding</category><category>grant</category><category>NumPy</category><category>OpenBLAS</category><guid>https://labs.quansight.org/blog/2020/11/a-second-czi-grant-for-numpy-and-openblas/</guid><pubDate>Thu, 19 Nov 2020 17:29:55 GMT</pubDate></item><item><title>Quansight Labs: what I learned in my first 3 months</title><link>https://labs.quansight.org/blog/2020/07/a-win-win-all-around/</link><dc:creator>Matti Picus</dc:creator><description>&lt;div&gt;&lt;p&gt;I joined Quansight at the beginning of April, splitting my time between
PyTorch (as part of a larger Quansight team) and contributing to Quansight Labs
supported community-driven projects in the Python scientific and data science
software stack, primarily to NumPy.  I have found my next home; the people, the
projects, and the atmosphere are an all around win-win for me and (I hope) for
the projects to which I contribute.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/07/a-win-win-all-around/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>funding</category><category>Labs</category><category>NumPy</category><category>PyTorch</category><guid>https://labs.quansight.org/blog/2020/07/a-win-win-all-around/</guid><pubDate>Tue, 21 Jul 2020 06:00:00 GMT</pubDate></item><item><title>Introducing ndindex, a Python library for manipulating indices of ndarrays</title><link>https://labs.quansight.org/blog/2020/04/introducing-ndindex-a-python-library-for-manipulating-indices-of-ndarrays/</link><dc:creator>Aaron Meurer</dc:creator><description>&lt;div&gt;&lt;p&gt;One of the most important features of NumPy arrays is their indexing
semantics. By "indexing" I mean anything that happens inside square brackets,
for example, &lt;code&gt;a[4::-1, 0, ..., [0, 1], np.newaxis]&lt;/code&gt;. NumPy's index semantics
are very expressive and powerful, and this is one of the reasons the library
is so popular.&lt;/p&gt;
&lt;p&gt;Index objects can be represented and manipulated directly. For example, the
above index is &lt;code&gt;(slice(4, None, -1), 0, Ellipsis, [0, 1], None)&lt;/code&gt;. If you are
any author of a library that tries to replicate NumPy array semantics, you
will have to work with these objects. However, they are often difficult to
work with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The different types that are valid indices for NumPy arrays do not have a
uniform API. Most of the types are also standard Python types, such as
&lt;code&gt;tuple&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, and &lt;code&gt;None&lt;/code&gt;, which are usually unrelated to indexing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Those objects that are specific to indexes, such as &lt;code&gt;slice&lt;/code&gt; and &lt;code&gt;Ellipsis&lt;/code&gt;
do not make any assumptions about their underlying semantics. For example,
Python lets you create &lt;code&gt;slice(None, None, 0)&lt;/code&gt; or &lt;code&gt;slice(0, 0.5)&lt;/code&gt; even though
&lt;code&gt;a[::0]&lt;/code&gt; and &lt;code&gt;a[0:0.5]&lt;/code&gt; would be always be an &lt;code&gt;IndexError&lt;/code&gt; on a NumPy array.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some index objects, such as &lt;code&gt;slice&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, and &lt;code&gt;ndarray&lt;/code&gt; are not hashable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NumPy itself does not offer much in the way of helper functions to work with
these objects.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These limitations may be annoying, but are easy enough to live with. The real
challenge when working with indices comes when you try to manipulate them.
Slices in particular are challenging to work with because the rich meaning of
slice semantics. Writing formulas for even very simple things is a real
challenge with slices. &lt;code&gt;slice(start, stop, step)&lt;/code&gt; (corresponding to
&lt;code&gt;a[start:stop:step]&lt;/code&gt;) has fundamentally different meaning depending on whether
&lt;code&gt;start&lt;/code&gt;,&lt;code&gt;stop&lt;/code&gt;, or &lt;code&gt;step&lt;/code&gt; are negative, nonnegative, or &lt;code&gt;None&lt;/code&gt;. As an example,
take &lt;code&gt;a[4:-2:-2]&lt;/code&gt;, where &lt;code&gt;a&lt;/code&gt; is a one-dimensional array. This slices every
other element from the third element to the second from the last. What will
the shape of this sliced array be? The answer is &lt;code&gt;(0,)&lt;/code&gt; if the original shape
is less than 1 or greater than 5, and &lt;code&gt;(1,)&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Code that manipulates slices will tend to have a lot of &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt; chains for
these different cases. And due to 0-based indexing, half-open semantics,
wraparound behavior, clipping, and step logic, the formulas are often quite
difficult to write down.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/04/introducing-ndindex-a-python-library-for-manipulating-indices-of-ndarrays/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>ndindex</category><category>NumPy</category><guid>https://labs.quansight.org/blog/2020/04/introducing-ndindex-a-python-library-for-manipulating-indices-of-ndarrays/</guid><pubDate>Mon, 20 Apr 2020 05:00:00 GMT</pubDate></item><item><title>Documentation as a way to build Community</title><link>https://labs.quansight.org/blog/2020/03/documentation-as-a-way-to-build-community/</link><dc:creator>Melissa Mendonça</dc:creator><description>&lt;div&gt;&lt;p&gt;As a long time user and participant in open source communities, I've always known that documentation is far from being a solved problem. At least, that's the impression we get from many developers: "writing docs is boring"; "it's a chore, nobody likes to do it". I have come to realize I'm one of those rare people who likes to write both code and documentation. &lt;/p&gt;
&lt;p&gt;Nobody will argue against documentation. It is clear that for an open-source software project, documentation is the public face of the project. The docs influence how people interact with the software and with the community. It sets the tone about inclusiveness, how people communicate and what users and contributors can do. Looking at the results of a “NumPy Tutorial” search on any search engine also gives an idea of the demand for this kind of content - it is possible to find documentation about how to read the NumPy documentation!&lt;/p&gt;
&lt;p&gt;I've started working at Quansight in January, and I have started doing work related to the &lt;a href="https://labs.quansight.org/blog/2019/11/numpy-openblas-CZI-grant/"&gt;NumPy CZI Grant&lt;/a&gt;. As a former professor in mathematics, this seemed like an interesting project both because of its potential impact on the NumPy (and larger) community and because of its relevance to me, as I love writing educational material and documentation. Having official high-level documentation written using up-to-date content and techniques will certainly mean more users (and developers/contributors) are involved in the NumPy community.&lt;/p&gt;
&lt;p&gt;So, if everybody agrees on its importance, why is it so hard to write good documentation?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/03/documentation-as-a-way-to-build-community/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Labs</category><category>NumPy</category><guid>https://labs.quansight.org/blog/2020/03/documentation-as-a-way-to-build-community/</guid><pubDate>Sat, 14 Mar 2020 12:25:55 GMT</pubDate></item><item><title>uarray: GSoC Participation</title><link>https://labs.quansight.org/blog/2020/03/uarray-gsoc-participation/</link><dc:creator>Hameer Abbasi</dc:creator><description>&lt;div&gt;&lt;p&gt;I'm pleased to announce that &lt;code&gt;uarray&lt;/code&gt; is participating in GSoC '20 as a sub-organization under the umbrella of the Python Software Foundation. Our ideas page is up &lt;a href="https://uarray.org/en/latest/gsoc/2020/ideas.html"&gt;here&lt;/a&gt;, go take a look and see if you (or someone you know) is interested in participating, either as a student or as a mentor.&lt;/p&gt;
&lt;p&gt;Prasun Anand and Peter Bell and myself will be mentoring, and we plan to take a maximum of two students, unless more community mentors show up.&lt;/p&gt;
&lt;p&gt;There have been &lt;a href="https://github.com/Quansight-Labs/uarray/pulls?q=is%3Apr+is%3Aclosed"&gt;quite&lt;/a&gt; &lt;a href="https://github.com/Quansight-Labs/unumpy/pulls?q=is%3Apr+is%3Aclosed"&gt;a few&lt;/a&gt; &lt;a href="https://github.com/Quansight-Labs/udiff/pulls?q=is%3Apr+is%3Aclosed"&gt;pull requests&lt;/a&gt; already to qualify from prospective students, some even going as far as to begin the work described in the idea they plan to work on.&lt;/p&gt;
&lt;p&gt;We're quite excited by the number of students who have shown an interest in participating, and we look forward to seeing excellent applications! What's more exciting, though, are some of the first contributions from people not currently at Quansight, in the true spirit of open-source software!&lt;/p&gt;&lt;/div&gt;</description><category>Big data</category><category>NumPy</category><category>SciPy</category><category>Tensors</category><category>uarray</category><guid>https://labs.quansight.org/blog/2020/03/uarray-gsoc-participation/</guid><pubDate>Thu, 12 Mar 2020 12:39:00 GMT</pubDate></item><item><title>Planned architectural work for PyData/Sparse</title><link>https://labs.quansight.org/blog/2020/02/whats-next-for-pydatasparse/</link><dc:creator>Hameer Abbasi</dc:creator><description>&lt;div&gt;&lt;h2&gt;What have we been doing so far? 🤔&lt;/h2&gt;
&lt;h3&gt;Research 📚&lt;/h3&gt;
&lt;p&gt;A lot of behind the scenes work has been taking place on PyData/Sparse. Not so much in terms of code, more in terms of research and community/team building. I've more-or-less decided to use the structure and the research behind the &lt;a href="https://github.com/tensor-compiler/taco"&gt;Tensor Algebra Compiler&lt;/a&gt;, the work of Fredrik Kjolstad and his collaborators at MIT. 🙇🏻‍♂️ To this end, I've read/watched the following talks and papers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/02/whats-next-for-pydatasparse/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Big data</category><category>NumPy</category><category>SciPy</category><category>Sparse</category><category>Tensors</category><guid>https://labs.quansight.org/blog/2020/02/whats-next-for-pydatasparse/</guid><pubDate>Wed, 11 Mar 2020 11:30:00 GMT</pubDate></item><item><title>A new grant for NumPy and OpenBLAS!</title><link>https://labs.quansight.org/blog/2019/11/numpy-openblas-CZI-grant/</link><dc:creator>Ralf Gommers</dc:creator><description>&lt;div&gt;&lt;p&gt;I'm very pleased to announce that NumPy and OpenBLAS just received a $195,000 grant from
the Chan Zuckerberg Initiative, through its
&lt;a href="https://chanzuckerberg.com/rfa/essential-open-source-software-for-science/"&gt;Essential Open Source Software for Science&lt;/a&gt;
(EOSS) program! This is good news for both projects, and I'm particularly excited about
the types of activities we'll be undertaking, what this will mean in terms of growing
the community, and to be part of the first round of funded projects of this visionary program.&lt;/p&gt;
&lt;h3&gt;The program&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://chanzuckerberg.com/newsroom/chan-zuckerberg-initiative-awards-5-million-for-open-source-software-projects-essential-to-science/"&gt;press release&lt;/a&gt;
gives a high level overview of the program, and the
&lt;a href="https://chanzuckerberg.com/eoss/proposals"&gt;grantee website&lt;/a&gt; lists the 32 successful applications.
Other projects that got funded include SciPy and Matplotlib (it's the very first
significant funding for both projects!), Pandas, Zarr, scikit-image, JupyterHub, and
Bioconda - we're in good company!&lt;/p&gt;
&lt;p&gt;Nicholas Sofroniew and Dario Taborelli, two of the people driving the EOSS program, wrote
a blog post that's well worth reading about the motivations for starting this program and
the 42 projects that applied and got funded:
&lt;a href="https://medium.com/@cziscience/4ab7f8d4f5dd"&gt;The Invisible Foundations of Biomedicine&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/11/numpy-openblas-CZI-grant/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>community</category><category>funding</category><category>Labs</category><category>NumPy</category><category>OpenBLAS</category><guid>https://labs.quansight.org/blog/2019/11/numpy-openblas-CZI-grant/</guid><pubDate>Thu, 14 Nov 2019 20:00:00 GMT</pubDate></item></channel></rss>