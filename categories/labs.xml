<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Quansight Labs (Posts about Labs)</title><link>https://labs.quansight.org/</link><description></description><atom:link href="https://labs.quansight.org/categories/labs.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:info@quansight.com"&gt;Quansight Labs Team&lt;/a&gt; </copyright><lastBuildDate>Wed, 14 Jul 2021 10:45:51 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Pyflyby: Improving Efficiency of Jupyter Interactive Sessions</title><link>https://labs.quansight.org/blog/2021/07/pyflyby-improving-efficiency-of-jupyter-interactive-sessions/</link><dc:creator>Matthias Bussonnier, Aaron Meurer,</dc:creator><description>&lt;div&gt;&lt;p&gt;Interruption hinder productivity more than interruption. A notification, random
realization, or unrelated error can derail one's train of thought when deep in a
complex analysis – a frustrating experience.&lt;/p&gt;
&lt;p&gt;In the software development context, forgetting to import a statement in an
interactive Jupyter session is such an experience. This can be especially
frustrating when using typical abbreviations, like &lt;code&gt;np&lt;/code&gt;, &lt;code&gt;pd&lt;/code&gt;, &lt;code&gt;plt&lt;/code&gt;, where the
meaning is obvious to the human reader, but not to the computer. The
time-to-first-plot, and ability to quickly cleanup one's notebook afterward
are critical to an enjoyable and efficient workflow.&lt;/p&gt;
&lt;p&gt;In this blogpost we present &lt;a href="https://github.com/deshaw/pyflyby"&gt;pyflyby&lt;/a&gt;, a
project and an extension to IPython and
&lt;a href="https://github.com/deshaw/jupyterlab-pyflyby"&gt;JupyterLab&lt;/a&gt;, that, among many
things, automatically inserts imports and tidies Python files and notebooks.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2021/07/pyflyby-improving-efficiency-of-jupyter-interactive-sessions/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Deshaw</category><category>Labs</category><category>Pyflyby</category><guid>https://labs.quansight.org/blog/2021/07/pyflyby-improving-efficiency-of-jupyter-interactive-sessions/</guid><pubDate>Wed, 07 Jul 2021 10:00:00 GMT</pubDate></item><item><title>Enhancements to Numba's guvectorize decorator</title><link>https://labs.quansight.org/blog/2021/02/enhancements-to-numba-guvectorize-decorator/</link><dc:creator>Guilherme Leobas</dc:creator><description>&lt;div&gt;&lt;p&gt;Starting from Numba 0.53, Numba will ship with an enhanced version of the &lt;code&gt;@guvectorize&lt;/code&gt; decorator. Similar to the &lt;a href="https://numba.pydata.org/numba-doc/dev/user/vectorize.html#the-vectorize-decorator"&gt;@vectorize&lt;/a&gt; decorator, &lt;a href="https://numba.pydata.org/numba-doc/dev/user/vectorize.html#the-guvectorize-decorator"&gt;@guvectorize&lt;/a&gt; now has two modes of operation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eager, or decoration-time compilation and&lt;/li&gt;
&lt;li&gt;Lazy, or call-time compilation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before, only the eager approach was supported. In this mode, users are required to provide a list of concrete supported types beforehand as its first argument. Now, this list can be omitted if desired and as one calls it, Numba dynamically generates new kernels for previously unsupported types.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2021/02/enhancements-to-numba-guvectorize-decorator/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Labs</category><category>Numba</category><guid>https://labs.quansight.org/blog/2021/02/enhancements-to-numba-guvectorize-decorator/</guid><pubDate>Thu, 25 Feb 2021 08:00:00 GMT</pubDate></item><item><title>Making SciPy's Image Interpolation Consistent and Well Documented</title><link>https://labs.quansight.org/blog/2021/01/scipy-ndimage-interpolation/</link><dc:creator>Gregory Lee</dc:creator><description>&lt;div&gt;&lt;h2&gt;SciPy n-dimensional Image Processing&lt;/h2&gt;
&lt;p&gt;SciPy's ndimage module provides a powerful set of general, n-dimensional image processing operations, categorized into areas such as filtering, interpolation and morphology. Traditional image processing deals with 2D arrays of pixels, possibly with an additional array dimension of size 3 or 4 to represent color channel and transparency information. However, there are many scientific applications where we may want to work with more general arrays such as the 3D volumetric images produced by medical imaging methods like computed tomography (CT) or magnetic resonance imaging (MRI) or biological imaging approaches such as light sheet microscopy. Aside from spatial axes, such data may have additional axes representing other quantities such as time, color, spectral frequency or different contrasts. Functions in ndimage have been implemented in a general n-dimensional manner so that they can be applied across 2D, 3D or more dimensions. A more detailed overview of the module is available in the
&lt;a href="https://docs.scipy.org/doc/scipy/reference/tutorial/ndimage.html"&gt;SciPy ndimage tutorial&lt;/a&gt;. SciPy's image functions are also used by downstream libraries such as &lt;a href="https://scikit-image.org"&gt;scikit-image&lt;/a&gt; to implement higher-level algorithms for things like image restoration, segmentation and registration.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2021/01/scipy-ndimage-interpolation/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Labs</category><category>Open-Source</category><category>Python</category><category>SciPy</category><guid>https://labs.quansight.org/blog/2021/01/scipy-ndimage-interpolation/</guid><pubDate>Fri, 22 Jan 2021 14:00:00 GMT</pubDate></item><item><title>Welcoming Tania Allard as Quansight Labs co-director</title><link>https://labs.quansight.org/blog/2021/01/welcoming-tania-allard-labs-codirector/</link><dc:creator>Ralf Gommers</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img alt="Photo Tania Allard" src="https://labs.quansight.org/galleries/team/tania_allard.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Today I'm incredibly excited to welcome Tania Allard to Quansight as
Co-Director of Quansight Labs. Tania (&lt;a href="https://github.com/trallard"&gt;GitHub&lt;/a&gt;,
&lt;a href="https://twitter.com/ixek/"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.bitsandchips.me/"&gt;personal
site&lt;/a&gt;) is a well-known and prolific PyData
community member. In the past few years she has been involved as a conference
organizer (JupyterCon, SciPy, PyJamas, PyCon UK, PyCon LatAm, JuliaCon and
more), as a community builder (PyLadies, NumFOCUS, RForwards), as a
contributor to Matplotlib and Jupyter, and as a regular speaker and mentor.
She also brings relevant experience in both industry and academia - she joins
us from Microsoft where she was a senior developer advocate, and has a PhD in
computational modelling.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2021/01/welcoming-tania-allard-labs-codirector/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Labs</category><guid>https://labs.quansight.org/blog/2021/01/welcoming-tania-allard-labs-codirector/</guid><pubDate>Mon, 04 Jan 2021 08:00:00 GMT</pubDate></item><item><title>Develop a JupyterLab Winter Theme</title><link>https://labs.quansight.org/blog/2020/12/jupyterlab-winter-theme/</link><dc:creator>Matthias Bussonnier, Isabela Presedo Floyd, Eric Charles, Eric Kelly, Tony Fast</dc:creator><description>&lt;div&gt;&lt;p&gt;JupyterLab 3.0 is about to be released and provides many 
improvements to the extension system. Theming is a way to extend JupyterLab and 
benefits from those improvements.&lt;/p&gt;
&lt;p&gt;While theming is often disregarded as a purely cosmetic endeavour, it can greatly
improve software. Theming can be great help for accessibility, and the Jupyter team
pays attention to making the default appearance accessibility-aware by using
sufficient contrast.  For users with a high visual acuity you may also choose 
to increase the information density.&lt;/p&gt;
&lt;p&gt;Theming can also be a great way to improve communication by increasing or
decreasing emphasis of the user interface, which can be of use for teaching or
presenting. Theming may also help with security, for example, by having a clear
distinction between staging and production.&lt;/p&gt;
&lt;p&gt;Finally Theming can be a great way to express oneself, for example, by using
a branded version of software that fits well into a context, or expressing one's artistic
preferences or opinions. &lt;/p&gt;
&lt;p&gt;In the following blog post, we will show you step-by-step how you can
develop a custom theme for JupyterLab, distribute it, and take the example of the
&lt;a href="https://github.com/Quansight-Labs/jupyterlab-theme-winter"&gt;jupyterlab-theme-winter&lt;/a&gt; theme we release today to celebrate the end of 2020.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/12/jupyterlab-winter-theme/"&gt;Read more…&lt;/a&gt; (9 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Jupyter</category><category>JupyterLab</category><category>JupyterTutorials</category><category>Labs</category><category>Theme</category><guid>https://labs.quansight.org/blog/2020/12/jupyterlab-winter-theme/</guid><pubDate>Tue, 22 Dec 2020 09:00:00 GMT</pubDate></item><item><title>PyTorch-Ignite: training and evaluating neural networks flexibly and transparently</title><link>https://labs.quansight.org/blog/2020/09/pytorch-ignite/</link><dc:creator>Victor Fomin</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;!--# PyTorch-Ignite: training and evaluating neural networks flexibly and transparently--&gt;

&lt;!--div align="center"&gt;
&lt;img width=512 src="https://i.ibb.co/WtbmXJQ/ignite-blog.jpg"/&gt;
&lt;/div--&gt;

&lt;div align="center"&gt;
&lt;img width="512" src="https://i.ibb.co/x8Bhqhj/habr-pytorch-ignite-image.png"&gt;
&lt;/div&gt;&lt;div align="center"&gt;
Authors: Victor Fomin (Quansight), Sylvain Desroziers (IFPEN, France)
&lt;/div&gt;&lt;div&gt;
This post is a general introduction of PyTorch-Ignite. It intends to give a brief but illustrative overview of what PyTorch-Ignite can offer for Deep Learning enthusiasts, professionals and researchers. Following the same philosophy as PyTorch, PyTorch-Ignite aims to keep it simple, flexible and extensible but performant and scalable.
&lt;/div&gt;&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/09/pytorch-ignite/"&gt;Read more…&lt;/a&gt; (28 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Deep Learning</category><category>Labs</category><category>Machine Learning</category><category>Neural Networks</category><category>Python</category><category>PyTorch</category><category>Tutorial</category><guid>https://labs.quansight.org/blog/2020/09/pytorch-ignite/</guid><pubDate>Thu, 10 Sep 2020 05:00:00 GMT</pubDate></item><item><title>Traitlets - an introduction &amp; use in Jupyter configuration management</title><link>https://labs.quansight.org/blog/2020/08/what-are-traitlets/</link><dc:creator>Matthias Bussonnier, Tony Fast</dc:creator><description>&lt;div&gt;&lt;p&gt;You have probably seen Traitlets in applications, you likely even use it. The package has nearly 5 million downloads
on &lt;a href="https://anaconda.org/conda-forge/traitlets"&gt;conda-forge&lt;/a&gt; alone.&lt;/p&gt;
&lt;h2&gt;But, what is Traitlets ?&lt;/h2&gt;
&lt;p&gt;In this post we'll answer this question along with where Traitlets came from, its applications, and a bit of history.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/08/what-are-traitlets/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>community</category><category>historical</category><category>IPython</category><category>Jupyter</category><category>Labs</category><category>Python</category><category>traitlets</category><guid>https://labs.quansight.org/blog/2020/08/what-are-traitlets/</guid><pubDate>Sun, 30 Aug 2020 09:00:00 GMT</pubDate></item><item><title>IPython reproducible builds</title><link>https://labs.quansight.org/blog/2020/08/ipython-reproducible-builds/</link><dc:creator>Matthias Bussonnier</dc:creator><description>&lt;div&gt;&lt;p&gt;Starting with IPython 7.16.1 (released in June 2020), you &lt;em&gt;should&lt;/em&gt; be able to recreate the sdist (&lt;code&gt;.tar.gz&lt;/code&gt;) and wheel
(&lt;code&gt;.whl&lt;/code&gt;), and get byte for byte identical result to the wheels published on PyPI. This is a critical step toward being able
to &lt;em&gt;trust&lt;/em&gt; your computing platforms, and a key component to improve efficiency of build and packaging platforms. It also
potentially impacts fast conda environment creation for users. The following goes into some reasons for why you should care.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/08/ipython-reproducible-builds/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>IPython</category><category>Labs</category><category>packaging</category><category>reproducible-builds</category><guid>https://labs.quansight.org/blog/2020/08/ipython-reproducible-builds/</guid><pubDate>Mon, 24 Aug 2020 12:00:00 GMT</pubDate></item><item><title>Quansight Labs: what I learned in my first 3 months</title><link>https://labs.quansight.org/blog/2020/07/a-win-win-all-around/</link><dc:creator>Matti Picus</dc:creator><description>&lt;div&gt;&lt;p&gt;I joined Quansight at the beginning of April, splitting my time between
PyTorch (as part of a larger Quansight team) and contributing to Quansight Labs
supported community-driven projects in the Python scientific and data science
software stack, primarily to NumPy.  I have found my next home; the people, the
projects, and the atmosphere are an all around win-win for me and (I hope) for
the projects to which I contribute.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/07/a-win-win-all-around/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>funding</category><category>Labs</category><category>NumPy</category><category>PyTorch</category><guid>https://labs.quansight.org/blog/2020/07/a-win-win-all-around/</guid><pubDate>Tue, 21 Jul 2020 06:00:00 GMT</pubDate></item><item><title>Writing docs is not just writing docs</title><link>https://labs.quansight.org/blog/2020/07/writing-docs-is-not-just-writing-docs/</link><dc:creator>Juanita Gomez</dc:creator><description>&lt;div&gt;&lt;p&gt;I joined the &lt;a href="https://www.spyder-ide.org"&gt;Spyder&lt;/a&gt; team almost two years ago, and I never thought I was going to end up working on docs. Six months ago I started a project with &lt;a href="https://github.com/CAM-Gerlach"&gt;CAM Gerlach&lt;/a&gt; and &lt;a href="https://github.com/ccordoba12"&gt;Carlos Cordoba&lt;/a&gt; to improve Spyder’s documentation. At first, I didn’t actually understand how important docs are for software, especially for open source projects. However, during all this time I’ve learned how documentation has a huge impact on the open-source community and I’ve been thankful to have been able to do this. But, from the beginning, I asked myself “why am I the ‘right person’ for this?”&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/07/writing-docs-is-not-just-writing-docs/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>documentation</category><category>Labs</category><category>Spyder</category><guid>https://labs.quansight.org/blog/2020/07/writing-docs-is-not-just-writing-docs/</guid><pubDate>Tue, 07 Jul 2020 22:00:00 GMT</pubDate></item></channel></rss>