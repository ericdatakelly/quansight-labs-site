<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Quansight Labs (Posts about community)</title><link>https://labs.quansight.org/</link><description></description><atom:link href="https://labs.quansight.org/categories/community.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:info@quansight.com"&gt;Quansight Labs Team&lt;/a&gt; </copyright><lastBuildDate>Sat, 10 Jul 2021 10:45:59 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>A step towards educating with Spyder</title><link>https://labs.quansight.org/blog/2021/04/a-step-towards-educating-with-spyder/</link><dc:creator>Juanita Gomez</dc:creator><description>&lt;div&gt;&lt;p&gt;As a community manager in the Spyder team, I have been looking for ways of
involving more users in the community and making Spyder useful for a larger
number of people. With this, a new idea came: Education.&lt;/p&gt;
&lt;p&gt;For the past months, we have been wondering with the team whether Spyder
could also serve as a teaching-learning platform, especially in this era
where remote instruction has become necessary. We submitted a proposal to the
Essential Open Source Software for Science (EOSS) program of the Chan
Zuckerberg Initiative, during its third cycle, with the idea of providing a
simple way inside Spyder to create and share interactive tutorials on topics
relevant to scientific research. Unfortunately, we didn’t get this funding,
but we didn’t let this great idea die.&lt;/p&gt;
&lt;p&gt;We submitted a second proposal to the &lt;a href="https://www.python.org/psf/"&gt;Python Software Foundation&lt;/a&gt;
from which we were awarded $4000. For me, this is the perfect opportunity for
us to take the first step towards using Spyder for education.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2021/04/a-step-towards-educating-with-spyder/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>community</category><category>funding</category><category>grant</category><category>Spyder</category><guid>https://labs.quansight.org/blog/2021/04/a-step-towards-educating-with-spyder/</guid><pubDate>Sun, 11 Apr 2021 14:00:00 GMT</pubDate></item><item><title>Traitlets - an introduction &amp; use in Jupyter configuration management</title><link>https://labs.quansight.org/blog/2020/08/what-are-traitlets/</link><dc:creator>Matthias Bussonnier, Tony Fast</dc:creator><description>&lt;div&gt;&lt;p&gt;You have probably seen Traitlets in applications, you likely even use it. The package has nearly 5 million downloads
on &lt;a href="https://anaconda.org/conda-forge/traitlets"&gt;conda-forge&lt;/a&gt; alone.&lt;/p&gt;
&lt;h2&gt;But, what is Traitlets ?&lt;/h2&gt;
&lt;p&gt;In this post we'll answer this question along with where Traitlets came from, its applications, and a bit of history.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/08/what-are-traitlets/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>community</category><category>historical</category><category>IPython</category><category>Jupyter</category><category>Labs</category><category>Python</category><category>traitlets</category><guid>https://labs.quansight.org/blog/2020/08/what-are-traitlets/</guid><pubDate>Sun, 30 Aug 2020 09:00:00 GMT</pubDate></item><item><title>A new grant for NumPy and OpenBLAS!</title><link>https://labs.quansight.org/blog/2019/11/numpy-openblas-CZI-grant/</link><dc:creator>Ralf Gommers</dc:creator><description>&lt;div&gt;&lt;p&gt;I'm very pleased to announce that NumPy and OpenBLAS just received a $195,000 grant from
the Chan Zuckerberg Initiative, through its
&lt;a href="https://chanzuckerberg.com/rfa/essential-open-source-software-for-science/"&gt;Essential Open Source Software for Science&lt;/a&gt;
(EOSS) program! This is good news for both projects, and I'm particularly excited about
the types of activities we'll be undertaking, what this will mean in terms of growing
the community, and to be part of the first round of funded projects of this visionary program.&lt;/p&gt;
&lt;h3&gt;The program&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://chanzuckerberg.com/newsroom/chan-zuckerberg-initiative-awards-5-million-for-open-source-software-projects-essential-to-science/"&gt;press release&lt;/a&gt;
gives a high level overview of the program, and the
&lt;a href="https://chanzuckerberg.com/eoss/proposals"&gt;grantee website&lt;/a&gt; lists the 32 successful applications.
Other projects that got funded include SciPy and Matplotlib (it's the very first
significant funding for both projects!), Pandas, Zarr, scikit-image, JupyterHub, and
Bioconda - we're in good company!&lt;/p&gt;
&lt;p&gt;Nicholas Sofroniew and Dario Taborelli, two of the people driving the EOSS program, wrote
a blog post that's well worth reading about the motivations for starting this program and
the 42 projects that applied and got funded:
&lt;a href="https://medium.com/@cziscience/4ab7f8d4f5dd"&gt;The Invisible Foundations of Biomedicine&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/11/numpy-openblas-CZI-grant/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>community</category><category>funding</category><category>Labs</category><category>NumPy</category><category>OpenBLAS</category><guid>https://labs.quansight.org/blog/2019/11/numpy-openblas-CZI-grant/</guid><pubDate>Thu, 14 Nov 2019 20:00:00 GMT</pubDate></item><item><title>Community-driven open source and funded development</title><link>https://labs.quansight.org/blog/2019/05/community-driven-opensource-funded-development/</link><dc:creator>Ralf Gommers</dc:creator><description>&lt;div&gt;&lt;p&gt;Quansight Labs is an experiment for us in a way. One of our main aims is to
channel more resources into community-driven PyData projects, to keep them
healthy and accelerate their development. &lt;em&gt;And do so in a way that projects
themselves stay in charge.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This post explains one method we're starting to use for this. I'm writing it
to be transparent with projects, the wider community and potential funders
about what we're starting to do. As well as to explicitly solicit feedback on
this method.&lt;/p&gt;
&lt;h3&gt;Community work orders&lt;/h3&gt;
&lt;p&gt;If you talk to someone about supporting an open source project, in particular a
well-known one that they rely on (e.g. NumPy, Jupyter, Pandas), they're often
willing to listen and help. What you quickly learn though is that they want
to know in some detail what will be done with the funds provided. This is
true not only for companies, but also for individuals. In addition, companies
will likely want a written agreement and some form of reporting about the
progress of the work. To meet this need we came up with &lt;em&gt;community work
orders&lt;/em&gt; (CWOs) - agreements that outline what work will be done on a project
(implementing new features, release management, improving documentation,
etc.) and outlining a reporting mechanism. What makes a CWO different from a
consulting contract? Key differences are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It must be work that is done on the open source project itself (and not e.g.
   on a plugin for it, or a customization for the client).&lt;/li&gt;
&lt;li&gt;The developers must have a reasonable amount of freedom to decide what to
   work on and what the technical approach will be, within the broad scope of
   the agreement.&lt;/li&gt;
&lt;li&gt;Deliverables cannot be guaranteed to end up in a project; instead the funder
   gets the promise of a best effort of implementation and working with the
   community.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Respecting community processes&lt;/h3&gt;
&lt;p&gt;Point 3 above is particularly important: &lt;em&gt;we must respect how open source
projects make decisions&lt;/em&gt;. If the project maintainers decide that they don't
want to include a particular change or new feature, that's their decision to
make. Any code change proposed as part of work on a CWO has to go through the
same review process as any other change, and be accepted on its merits. The
argument "but someone paid for this" isn't particularly strong, nor is one
that reviewers should have to care about. Now of course we don't expect it to
be common for work to be rejected. An important part of the Quansight value
proposition is that because we understand how open source works and many of
our developers are maintainers and contributors of the open source projects
already, we propose work that the community already has interest in and we
open the discussion about any major code change early to avoid issues.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/05/community-driven-opensource-funded-development/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>community</category><category>funding</category><category>Labs</category><guid>https://labs.quansight.org/blog/2019/05/community-driven-opensource-funded-development/</guid><pubDate>Wed, 29 May 2019 05:00:00 GMT</pubDate></item><item><title>Thoughts on joining Quansight Labs</title><link>https://labs.quansight.org/blog/2019/04/joining-labs/</link><dc:creator>Ralf Gommers</dc:creator><description>&lt;div&gt;&lt;p&gt;In his &lt;a href="https://www.quansight.com/post/welcoming-ralf-gommers-as-director-of-quansight-labs"&gt;blog post&lt;/a&gt; welcoming me, Travis set out his vision for pushing forward the Python ecosystem for scientific computing and data science, and how to fund it. In this post I'll add my own perspectives to that. Given that Quansight Labs' purpose, it seems fitting to start with how I see things as a community member and organizer.&lt;/p&gt;
&lt;h4&gt;A community perspective&lt;/h4&gt;
&lt;p&gt;The SciPy and PyData ecosystems have experienced massive growth over the past years, and this is likely to continue in the near future. As a maintainer, that feels very gratifying. At the same time it brings up worries. Core projects struggle to keep up with the growth in number of users. Funded development can help with this, if done right. Some of the things I would like to see from companies that participate in the ecosystem:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Explain innovations they're working on to the community and solicit input, &lt;em&gt;at an early stage&lt;/em&gt;. Developing something away from the spotlight and then unveiling it as the "next big thing" once it's done usually leads to either corporate-driven projects (if users adopt it) or a short life span.&lt;/li&gt;
&lt;li&gt;Participate in a sustainable way. This means for example to contribute in a way that lowers, or at least doesn't increase, the overall effort required for maintenance. Only sending pull requests with new features doesn't achieve that. Solving maintenance pain points or helping with code review does.&lt;/li&gt;
&lt;li&gt;Operate transparently. Develop in the open, plan in the open, be clear about directions and motivations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/04/joining-labs/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>community</category><category>Labs</category><guid>https://labs.quansight.org/blog/2019/04/joining-labs/</guid><pubDate>Mon, 08 Apr 2019 05:00:00 GMT</pubDate></item></channel></rss>