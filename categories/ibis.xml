<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Quansight Labs (Posts about Ibis)</title><link>https://labs.quansight.org/</link><description></description><atom:link href="https://labs.quansight.org/categories/ibis.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:info@quansight.com"&gt;Quansight Labs Team&lt;/a&gt; </copyright><lastBuildDate>Wed, 07 Jul 2021 17:27:31 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Querying multiple backends with Ibis</title><link>https://labs.quansight.org/blog/2020/11/the-ibis-backends/</link><dc:creator>Tony Fast, Kim Pevey</dc:creator><description>&lt;div&gt;&lt;p&gt;In &lt;a href="https://labs.quansight.org/blog/2020/06/ibis-an-idiomatic-flavor-of-sql-for-python-programmers/"&gt;our recent Ibis post&lt;/a&gt;, we discussed querying &amp;amp; retrieving data using a familiar &lt;a href="http://pandas.pydata.org/"&gt;Pandas&lt;/a&gt;-like interface.
That discussion focused on the fluent API that &lt;a href="https://www.ibis-project.org/"&gt;Ibis&lt;/a&gt; provides to query structure from a SQLite database—in particular, using a single specific backend.
In this post, we'll explore Ibis's ability to answer questions about data using two different Ibis backends.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ibis.omniscidb&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;dask&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;intake&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;pyarrow&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;arrow&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;altair&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;h5py&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;hdf5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;Ibis in the scientific Python ecosystem&lt;/h3&gt;
&lt;p&gt;Before we delve into the technical details of using Ibis, we'll consider Ibis in the greater historical context of the scientific Python ecosystem. It was started by Wes McKinney, the creator of Pandas, as way to query information on
the &lt;a href="https://en.wikipedia.org/wiki/Apache_Hadoop#HDFS"&gt;Hadoop distributed file system&lt;/a&gt; and &lt;a href="https://pypi.org/project/pyspark/"&gt;PySpark&lt;/a&gt;. More backends were added later as Ibis became a general tool for data queries.&lt;/p&gt;
&lt;p&gt;Throughout the rest of this post, we'll highlight the ability of Ibis to generically prescribe
query expressions across different data storage systems.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/11/the-ibis-backends/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Ibis</category><category>OmniSci</category><category>Pandas</category><category>SQL</category><guid>https://labs.quansight.org/blog/2020/11/the-ibis-backends/</guid><pubDate>Fri, 13 Nov 2020 06:00:00 GMT</pubDate></item><item><title>Highlights of the Ibis 1.3 release</title><link>https://labs.quansight.org/blog/2020/05/ibis-1.3-release/</link><dc:creator>Ivan Ogasawara</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Ibis 1.3 was just released, after 8 months of development work, with 104 new commits from 16 unique contributors. What is new? In this blog post we will discuss some important features in this new version!&lt;/p&gt;
&lt;p&gt;First, if you are new to the Ibis framework world, you can check this &lt;a href="https://labs.quansight.org/blog/2019/07/ibis-python-data-analysis-productivity-framework/"&gt;blog post&lt;/a&gt; I wrote last year, with some introductory information about it.&lt;/p&gt;
&lt;p&gt;Some highlighted features of this new version are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Addition of a &lt;code&gt;PySpark&lt;/code&gt; backend&lt;/li&gt;
&lt;li&gt;Improvement of geospatial support&lt;/li&gt;
&lt;li&gt;Addition of &lt;code&gt;JSON&lt;/code&gt;, &lt;code&gt;JSONB&lt;/code&gt; and &lt;code&gt;UUID&lt;/code&gt; data types&lt;/li&gt;
&lt;li&gt;Initial support for &lt;code&gt;Python 3.8&lt;/code&gt; added and support for &lt;code&gt;Python 3.5&lt;/code&gt; dropped&lt;/li&gt;
&lt;li&gt;Added new backends and geospatial methods to the documentation&lt;/li&gt;
&lt;li&gt;Renamed the &lt;code&gt;mapd&lt;/code&gt; backend to &lt;code&gt;omniscidb&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/05/ibis-1.3-release/"&gt;Read more…&lt;/a&gt; (9 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Ibis</category><guid>https://labs.quansight.org/blog/2020/05/ibis-1.3-release/</guid><pubDate>Sat, 02 May 2020 03:30:00 GMT</pubDate></item><item><title>Ibis: Python data analysis productivity framework</title><link>https://labs.quansight.org/blog/2019/07/ibis-python-data-analysis-productivity-framework/</link><dc:creator>Ivan Ogasawara</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Ibis is a library pretty useful on data analysis tasks that provides a pandas-like API that allows operations like create filter, add columns, apply math operations etc in a &lt;code&gt;lazy&lt;/code&gt; mode so all the operations are just registered in memory but not executed and when you want to get the result of the expression you created, Ibis compiles that and makes a request to the remote server (remote storage and execution systems like Hadoop components or SQL databases). Its goal is to simplify analytical workflows and make you more productive.&lt;/p&gt;
&lt;p&gt;Ibis was created by &lt;a href="https://github.com/wesm"&gt;Wes McKinney&lt;/a&gt; and is mainly maintained by &lt;a href="https://github.com/cpcloud"&gt;Phillip Cloud&lt;/a&gt; and &lt;a href="https://github.com/kszucs"&gt;Krisztián Szűcs&lt;/a&gt;. Also, recently, I was invited to become a maintainer of the Ibis repository!&lt;/p&gt;
&lt;p&gt;Maybe you are thinking: "why should I use Ibis?". Well, if you have any of the following issues, probably you should consider using Ibis in your analytical workflow!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if you need to get data from a SQL database but you don't know much about SQL ...&lt;/li&gt;
&lt;li&gt;if you create SQL statements manually using string and have a lot of &lt;code&gt;IF&lt;/code&gt;'s in your code that compose specific parts of your SQL code (it could be pretty hard to maintain and it will makes your code pretty ugly) ...&lt;/li&gt;
&lt;li&gt;if you need to handle data with a big volume ...&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/07/ibis-python-data-analysis-productivity-framework/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Ibis</category><guid>https://labs.quansight.org/blog/2019/07/ibis-python-data-analysis-productivity-framework/</guid><pubDate>Tue, 09 Jul 2019 03:30:00 GMT</pubDate></item></channel></rss>