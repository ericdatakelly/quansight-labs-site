<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Quansight Labs (Posts by Ralf Gommers)</title><link>https://labs.quansight.org/</link><description></description><atom:link href="https://labs.quansight.org/authors/ralf-gommers.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:info@quansight.com"&gt;Quansight Labs Team&lt;/a&gt; </copyright><lastBuildDate>Sat, 17 Jul 2021 10:45:04 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Python packaging in 2021 - pain points and bright spots</title><link>https://labs.quansight.org/blog/2021/01/python-packaging-brainstorm/</link><dc:creator>Ralf Gommers</dc:creator><description>&lt;div&gt;&lt;p&gt;At Quansight we have a weekly "Q-share" session on Fridays where everyone can
share/demo things they have worked on, recently learned, or that simply seem
interesting to share with their colleagues. This can be about anything, from
new utilities to low-level performance, from building inclusive communities
to how to write better documentation, from UX design to what legal &amp;amp;
accounting does to support the business. This week I decided to try something
different: hold a brainstorm on the state of Python packaging today.&lt;/p&gt;
&lt;p&gt;The ~30 participants were mostly from the PyData world, but not exclusively -
it included people with backgrounds and preferences ranging from C, C++ and
Fortran to JavaScript, R and DevOps - and with experience as end-users,
packagers, library authors, and educators. This blog post contains the raw
output of the 30-minute brainstorm (only cleaned up for textual issues) and
my annotations on it (in italics) which capture some of the discussion during
the session and links and context that may be helpful. I think it sketches a
decent picture of the main pain points of Python packaging for users and
developers interacting with the Python data and numerical computing ecosystem.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2021/01/python-packaging-brainstorm/"&gt;Read more…&lt;/a&gt; (11 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Conda</category><category>conda-forge</category><category>CUDA</category><category>manylinux</category><category>packaging</category><category>pip</category><category>PyData</category><category>PyPI</category><category>Python</category><category>setuptools</category><guid>https://labs.quansight.org/blog/2021/01/python-packaging-brainstorm/</guid><pubDate>Sun, 24 Jan 2021 04:00:00 GMT</pubDate></item><item><title>Welcoming Tania Allard as Quansight Labs co-director</title><link>https://labs.quansight.org/blog/2021/01/welcoming-tania-allard-labs-codirector/</link><dc:creator>Ralf Gommers</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img alt="Photo Tania Allard" src="https://labs.quansight.org/galleries/team/tania_allard.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Today I'm incredibly excited to welcome Tania Allard to Quansight as
Co-Director of Quansight Labs. Tania (&lt;a href="https://github.com/trallard"&gt;GitHub&lt;/a&gt;,
&lt;a href="https://twitter.com/ixek/"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.bitsandchips.me/"&gt;personal
site&lt;/a&gt;) is a well-known and prolific PyData
community member. In the past few years she has been involved as a conference
organizer (JupyterCon, SciPy, PyJamas, PyCon UK, PyCon LatAm, JuliaCon and
more), as a community builder (PyLadies, NumFOCUS, RForwards), as a
contributor to Matplotlib and Jupyter, and as a regular speaker and mentor.
She also brings relevant experience in both industry and academia - she joins
us from Microsoft where she was a senior developer advocate, and has a PhD in
computational modelling.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2021/01/welcoming-tania-allard-labs-codirector/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Labs</category><guid>https://labs.quansight.org/blog/2021/01/welcoming-tania-allard-labs-codirector/</guid><pubDate>Mon, 04 Jan 2021 08:00:00 GMT</pubDate></item><item><title>A new grant for NumPy and OpenBLAS!</title><link>https://labs.quansight.org/blog/2019/11/numpy-openblas-CZI-grant/</link><dc:creator>Ralf Gommers</dc:creator><description>&lt;div&gt;&lt;p&gt;I'm very pleased to announce that NumPy and OpenBLAS just received a $195,000 grant from
the Chan Zuckerberg Initiative, through its
&lt;a href="https://chanzuckerberg.com/rfa/essential-open-source-software-for-science/"&gt;Essential Open Source Software for Science&lt;/a&gt;
(EOSS) program! This is good news for both projects, and I'm particularly excited about
the types of activities we'll be undertaking, what this will mean in terms of growing
the community, and to be part of the first round of funded projects of this visionary program.&lt;/p&gt;
&lt;h3&gt;The program&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://chanzuckerberg.com/newsroom/chan-zuckerberg-initiative-awards-5-million-for-open-source-software-projects-essential-to-science/"&gt;press release&lt;/a&gt;
gives a high level overview of the program, and the
&lt;a href="https://chanzuckerberg.com/eoss/proposals"&gt;grantee website&lt;/a&gt; lists the 32 successful applications.
Other projects that got funded include SciPy and Matplotlib (it's the very first
significant funding for both projects!), Pandas, Zarr, scikit-image, JupyterHub, and
Bioconda - we're in good company!&lt;/p&gt;
&lt;p&gt;Nicholas Sofroniew and Dario Taborelli, two of the people driving the EOSS program, wrote
a blog post that's well worth reading about the motivations for starting this program and
the 42 projects that applied and got funded:
&lt;a href="https://medium.com/@cziscience/4ab7f8d4f5dd"&gt;The Invisible Foundations of Biomedicine&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/11/numpy-openblas-CZI-grant/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>community</category><category>funding</category><category>Labs</category><category>NumPy</category><category>OpenBLAS</category><guid>https://labs.quansight.org/blog/2019/11/numpy-openblas-CZI-grant/</guid><pubDate>Thu, 14 Nov 2019 20:00:00 GMT</pubDate></item><item><title>Quansight presence at SciPy'19</title><link>https://labs.quansight.org/blog/2019/07/quansight-at-scipy2019/</link><dc:creator>Ralf Gommers</dc:creator><description>&lt;div&gt;&lt;p&gt;Yesterday the SciPy'19 conference ended. It was a lot of fun, and very productive. You can really feel that there's a lot of energy in the community, and that it's growing and maturing. This post is just a quick update to summarize Quansight's presence and contributions, as well as some of the more interesting things I noticed.&lt;/p&gt;
&lt;h3&gt;A few highlights&lt;/h3&gt;
&lt;p&gt;The "Open Source Communities" track, which had a strong emphasis on topics like burnout, diversity and sustainability, as well as the keynotes by Stuart Geiger ("&lt;em&gt;The Invisible Work of Maintaining and Sustaining Open-Source Software&lt;/em&gt;") and Carol Willing ("&lt;em&gt;Jupyter: Always Open for Learning and Discovery&lt;/em&gt;") showed that many more people and projects are paying more attention to and evolving their thinking on the human and organizational aspects of open source. &lt;/p&gt;
&lt;p&gt;I did not go to many technical talks, but did make sure to catch Matt Rocklin's talk "&lt;em&gt;Refactoring the SciPy Ecosystem for Heterogeneous Computing&lt;/em&gt;". Matt clearly explained some key issues and opportunities around the state of array computing libraries in Python - I highly recommend watching this talk.&lt;/p&gt;
&lt;p&gt;Abigail Cabunoc Mayes' talk "&lt;em&gt;Work Open, Lead Open (#WOLO) for Sustainability&lt;/em&gt;" was fascinating - it made me rethink the governance models and roles we use for our projects, and I worked on some of her concrete suggestions during the sprints.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/07/quansight-at-scipy2019/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Labs</category><category>SciPy</category><guid>https://labs.quansight.org/blog/2019/07/quansight-at-scipy2019/</guid><pubDate>Mon, 15 Jul 2019 05:00:00 GMT</pubDate></item><item><title>Labs update and May highlights</title><link>https://labs.quansight.org/blog/2019/06/labs-update-may-highlights/</link><dc:creator>Ralf Gommers</dc:creator><description>&lt;div&gt;&lt;p&gt;Time flies when you're having fun. Here is an update of some of the highlights
of my second month at Quansight Labs.&lt;/p&gt;
&lt;h3&gt;The making of a black hole image &amp;amp; GitHub Sponsors&lt;/h3&gt;
&lt;p&gt;Both Travis and myself were invited by GitHub to attend GitHub Satellite in
Berlin. The main reason was that Nat Friedman (GitHub CEO) decided to spend the
first 20 minutes of his keynote to highlight the &lt;a href="https://eventhorizontelescope.org/"&gt;Event Horizon
Telescope's&lt;/a&gt; black hole image and the open
source software that made that imaging possible. This included the scientific
Python very prominently - NumPy, Matplotlib, Python, Cython, SciPy, AstroPy and
other projects were highlighted. At the same time, Nat introduced new GitHub
features like "used by", a triaging role and new dependency graph features and
illustrated how those worked for NumPy. These features will be very welcome
news to maintainers of almost any project.&lt;/p&gt;
&lt;p&gt;&lt;img alt="GitHub Satellite'19 keynote, showcasing NumPy and Matplotlib" src="https://labs.quansight.org/images/githubsatellite_keynote_numpy_matplotlib.png"&gt;&lt;/p&gt;
&lt;p&gt;The single most visible feature introduced was &lt;strong&gt;GitHub Sponsors&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="GitHub Sponsors enabled on the NumPy repo" src="https://labs.quansight.org/images/github_sponsors_screenshot.png"&gt;&lt;/p&gt;
&lt;p&gt;I really enjoyed meeting &lt;a href="https://devonzuegel.com"&gt;Devon Zuegel&lt;/a&gt;, Product
Manager of the Open Source Economy Team at GitHub, in person after previously
having had the chance to exchange ideas with her about the funding related
needs of scientific Python projects and their core teams. I'm confident that
GitHub Sponsors will evolve in a direction that's beneficial to
community-driven open source projects.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/06/labs-update-may-highlights/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Labs</category><guid>https://labs.quansight.org/blog/2019/06/labs-update-may-highlights/</guid><pubDate>Wed, 12 Jun 2019 05:00:00 GMT</pubDate></item><item><title>Community-driven open source and funded development</title><link>https://labs.quansight.org/blog/2019/05/community-driven-opensource-funded-development/</link><dc:creator>Ralf Gommers</dc:creator><description>&lt;div&gt;&lt;p&gt;Quansight Labs is an experiment for us in a way. One of our main aims is to
channel more resources into community-driven PyData projects, to keep them
healthy and accelerate their development. &lt;em&gt;And do so in a way that projects
themselves stay in charge.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This post explains one method we're starting to use for this. I'm writing it
to be transparent with projects, the wider community and potential funders
about what we're starting to do. As well as to explicitly solicit feedback on
this method.&lt;/p&gt;
&lt;h3&gt;Community work orders&lt;/h3&gt;
&lt;p&gt;If you talk to someone about supporting an open source project, in particular a
well-known one that they rely on (e.g. NumPy, Jupyter, Pandas), they're often
willing to listen and help. What you quickly learn though is that they want
to know in some detail what will be done with the funds provided. This is
true not only for companies, but also for individuals. In addition, companies
will likely want a written agreement and some form of reporting about the
progress of the work. To meet this need we came up with &lt;em&gt;community work
orders&lt;/em&gt; (CWOs) - agreements that outline what work will be done on a project
(implementing new features, release management, improving documentation,
etc.) and outlining a reporting mechanism. What makes a CWO different from a
consulting contract? Key differences are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It must be work that is done on the open source project itself (and not e.g.
   on a plugin for it, or a customization for the client).&lt;/li&gt;
&lt;li&gt;The developers must have a reasonable amount of freedom to decide what to
   work on and what the technical approach will be, within the broad scope of
   the agreement.&lt;/li&gt;
&lt;li&gt;Deliverables cannot be guaranteed to end up in a project; instead the funder
   gets the promise of a best effort of implementation and working with the
   community.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Respecting community processes&lt;/h3&gt;
&lt;p&gt;Point 3 above is particularly important: &lt;em&gt;we must respect how open source
projects make decisions&lt;/em&gt;. If the project maintainers decide that they don't
want to include a particular change or new feature, that's their decision to
make. Any code change proposed as part of work on a CWO has to go through the
same review process as any other change, and be accepted on its merits. The
argument "but someone paid for this" isn't particularly strong, nor is one
that reviewers should have to care about. Now of course we don't expect it to
be common for work to be rejected. An important part of the Quansight value
proposition is that because we understand how open source works and many of
our developers are maintainers and contributors of the open source projects
already, we propose work that the community already has interest in and we
open the discussion about any major code change early to avoid issues.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/05/community-driven-opensource-funded-development/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>community</category><category>funding</category><category>Labs</category><guid>https://labs.quansight.org/blog/2019/05/community-driven-opensource-funded-development/</guid><pubDate>Wed, 29 May 2019 05:00:00 GMT</pubDate></item><item><title>Labs update and April highlights</title><link>https://labs.quansight.org/blog/2019/05/labs-update-april-highlights/</link><dc:creator>Ralf Gommers</dc:creator><description>&lt;div&gt;&lt;p&gt;It has been an exciting first month for me at Quansight Labs. It's a good time
for a summary of what we worked on in April and what is coming next.&lt;/p&gt;
&lt;h3&gt;Progress on array computing libraries&lt;/h3&gt;
&lt;p&gt;Our first bucket of activities I'd call "innovation". The most prominent
projects in this bucket are &lt;a href="https://xnd.io/"&gt;XND&lt;/a&gt;,
&lt;a href="https://uarray.readthedocs.io/en/latest/"&gt;uarray&lt;/a&gt;,
&lt;a href="https://github.com/Quansight-Labs/metadsl"&gt;metadsl&lt;/a&gt;,
&lt;a href="https://github.com/Quansight-Labs/python-moa"&gt;python-moa&lt;/a&gt;,
&lt;a href="https://github.com/xnd-project/rbc"&gt;Remote Backend Compiler&lt;/a&gt; and
&lt;a href="https://github.com/xnd-project/arrayviews"&gt;arrayviews&lt;/a&gt;.
XND is an umbrella name for a set of related array
computing libraries: &lt;code&gt;xnd&lt;/code&gt;, &lt;code&gt;ndtypes&lt;/code&gt;, &lt;code&gt;gumath&lt;/code&gt;, and &lt;code&gt;xndtools&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Hameer Abbasi made some major steps forward with &lt;code&gt;uarray&lt;/code&gt;: the backend and
coercion semantics are now largely worked out, there is
good &lt;a href="https://uarray.readthedocs.io/en/latest/"&gt;documentation&lt;/a&gt;, and the
&lt;code&gt;unumpy&lt;/code&gt; package (which currently has &lt;code&gt;numpy&lt;/code&gt;, &lt;code&gt;XND&lt;/code&gt; and &lt;code&gt;PyTorch&lt;/code&gt; backends)
is progressing well. This &lt;a href="https://labs.quansight.org/blog/2019/04/uarray-intro/"&gt;blog post&lt;/a&gt;
gives a good overview of the motivation for &lt;code&gt;uarray&lt;/code&gt; and its main concepts.&lt;/p&gt;
&lt;p&gt;Saul Shanabrook and Chris Ostrouchov worked out how best to put &lt;code&gt;metadsl&lt;/code&gt;
and &lt;code&gt;python-moa&lt;/code&gt; together: &lt;code&gt;metadsl&lt;/code&gt; can be used to create the API for
&lt;code&gt;python-moa&lt;/code&gt; to simplify the code base of the latter a lot. Chris 
also wrote an interesting &lt;a href="https://labs.quansight.org/blog/2019/04/python-moa-tensor-compiler/"&gt;blog post&lt;/a&gt;
explaining the MoA principles.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/05/labs-update-april-highlights/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Labs</category><guid>https://labs.quansight.org/blog/2019/05/labs-update-april-highlights/</guid><pubDate>Fri, 03 May 2019 05:00:00 GMT</pubDate></item><item><title>Thoughts on joining Quansight Labs</title><link>https://labs.quansight.org/blog/2019/04/joining-labs/</link><dc:creator>Ralf Gommers</dc:creator><description>&lt;div&gt;&lt;p&gt;In his &lt;a href="https://www.quansight.com/post/welcoming-ralf-gommers-as-director-of-quansight-labs"&gt;blog post&lt;/a&gt; welcoming me, Travis set out his vision for pushing forward the Python ecosystem for scientific computing and data science, and how to fund it. In this post I'll add my own perspectives to that. Given that Quansight Labs' purpose, it seems fitting to start with how I see things as a community member and organizer.&lt;/p&gt;
&lt;h4&gt;A community perspective&lt;/h4&gt;
&lt;p&gt;The SciPy and PyData ecosystems have experienced massive growth over the past years, and this is likely to continue in the near future. As a maintainer, that feels very gratifying. At the same time it brings up worries. Core projects struggle to keep up with the growth in number of users. Funded development can help with this, if done right. Some of the things I would like to see from companies that participate in the ecosystem:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Explain innovations they're working on to the community and solicit input, &lt;em&gt;at an early stage&lt;/em&gt;. Developing something away from the spotlight and then unveiling it as the "next big thing" once it's done usually leads to either corporate-driven projects (if users adopt it) or a short life span.&lt;/li&gt;
&lt;li&gt;Participate in a sustainable way. This means for example to contribute in a way that lowers, or at least doesn't increase, the overall effort required for maintenance. Only sending pull requests with new features doesn't achieve that. Solving maintenance pain points or helping with code review does.&lt;/li&gt;
&lt;li&gt;Operate transparently. Develop in the open, plan in the open, be clear about directions and motivations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/04/joining-labs/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>community</category><category>Labs</category><guid>https://labs.quansight.org/blog/2019/04/joining-labs/</guid><pubDate>Mon, 08 Apr 2019 05:00:00 GMT</pubDate></item></channel></rss>