<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Quansight Labs (Posts by Melissa Weber Mendonça)</title><link>https://labs.quansight.org/</link><description></description><atom:link href="https://labs.quansight.org/authors/melissa-weber-mendonca.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:info@quansight.com"&gt;Quansight Labs Team&lt;/a&gt; </copyright><lastBuildDate>Thu, 15 Jul 2021 10:46:00 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>A second CZI grant for NumPy and OpenBLAS</title><link>https://labs.quansight.org/blog/2020/11/a-second-czi-grant-for-numpy-and-openblas/</link><dc:creator>Melissa Weber Mendonça</dc:creator><description>&lt;div&gt;&lt;p&gt;I am happy to announce that NumPy and OpenBLAS have once again been awarded a
grant from the Chan Zuckerberg Initiative through
&lt;a href="https://chanzuckerberg.com/newsroom/czi-awards-4-7-million-for-open-source-software-and-organizations-advancing-open-science/"&gt;Cycle 3 of the Essential Open Source Software for Science (EOSS) program&lt;/a&gt;.
This new grant totaling $140,000 will fund part of our efforts to improve
usability and sustainability in both projects and is excellent news for the
scientific computing community, which will certainly benefit from this work
downstream.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/11/a-second-czi-grant-for-numpy-and-openblas/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>CZI</category><category>funding</category><category>grant</category><category>NumPy</category><category>OpenBLAS</category><guid>https://labs.quansight.org/blog/2020/11/a-second-czi-grant-for-numpy-and-openblas/</guid><pubDate>Thu, 19 Nov 2020 17:29:55 GMT</pubDate></item><item><title>Performance of the Versioned HDF5 Library</title><link>https://labs.quansight.org/blog/2020/09/versioned-hdf5-performance/</link><dc:creator>Melissa Weber Mendonça</dc:creator><description>&lt;div&gt;&lt;p&gt;In several industry and science applications, a filesystem-like storage model such as &lt;a href="https://www.hdfgroup.org/solutions/hdf5/"&gt;HDF5&lt;/a&gt; is the more appropriate solution for manipulating large amounts of data. However, suppose that data changes over time. In that case, it's not obvious how to track those different versions, since HDF5 is a binary format and is not well suited for traditional version control systems and tools. &lt;/p&gt;
&lt;p&gt;In a &lt;a href="https://labs.quansight.org/blog/2020/08/introducing-versioned-hdf5/"&gt;previous post&lt;/a&gt;, we introduced the Versioned HDF5 library, which implements a mechanism for storing binary data sets in a versioned way that feels natural to users of other version control systems, and described some of its features. In this post, we'll show some of the performance analysis we did while developing the library, hopefully making the case that reading and writing versioned HDF5 files can be done with a nice, intuitive API while being as efficient as possible. The tests presented here show that using the Versioned HDF5 library results in reduced disk space usage, and further reductions in this area can be achieved with the use of HDF5/&lt;a href="https://www.h5py.org"&gt;h5py&lt;/a&gt;-provided compression algorithms. That only comes at a cost of &amp;lt;10x file writing speed.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/09/versioned-hdf5-performance/"&gt;Read more…&lt;/a&gt; (14 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>h5py</category><category>HDF5</category><guid>https://labs.quansight.org/blog/2020/09/versioned-hdf5-performance/</guid><pubDate>Fri, 11 Sep 2020 11:00:00 GMT</pubDate></item><item><title>Introducing Versioned HDF5</title><link>https://labs.quansight.org/blog/2020/08/introducing-versioned-hdf5/</link><dc:creator>Melissa Weber Mendonça</dc:creator><description>&lt;div&gt;&lt;p&gt;The problem of storing and manipulating large amounts of data is a challenge in
many scientific computing and industry applications. One of the standard data
models for this is &lt;a href="https://support.hdfgroup.org/HDF5/whatishdf5.html"&gt;HDF5&lt;/a&gt;,
an open technology that implements a hierarchical structure (similar to a
file-system structure) for storing large amounts of possibly heterogeneous data
within a single file. Data in an HDF5 file is organized into &lt;em&gt;groups&lt;/em&gt; and
&lt;em&gt;datasets&lt;/em&gt;; you can think about these as the folders and files in your local
file system, respectively. You can also optionally store metadata associated
with each item in a file, which makes this a self-describing and powerful data
storage model.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/08/introducing-versioned-hdf5/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>h5py</category><category>HDF5</category><guid>https://labs.quansight.org/blog/2020/08/introducing-versioned-hdf5/</guid><pubDate>Fri, 21 Aug 2020 13:00:00 GMT</pubDate></item></channel></rss>